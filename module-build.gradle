/**
 * 组件化子 module 通用 build.gradle，方便统一管理
 *
 * 根据 isBuildModule 来统一管理各个子 module 在 application 与 library 之间切换
 */
if (rootProject.ext.isBuildModule){
    apply plugin: 'com.android.application'
}else{
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.blankj.bus"

//apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion build_versions.compileSdk
    buildToolsVersion build_versions.buildTools

    defaultConfig {
        minSdkVersion build_versions.minSdk
        targetSdkVersion build_versions.targetSdk
        versionCode app_version.versionCode
        versionName app_version.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        //在 BuildConfig 中添加自定义参数 isBuildModule ，用于判断各个子 Module 是否是独立运行，来做相应的逻辑处理
        buildConfigField "Boolean","isBuildModule", "$rootProject.ext.isBuildModule"
    }

    buildTypes {
        release {
            minifyEnabled true
            consumerProguardFiles 'proguard-rules.pro'
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    dataBinding {
//        enabled = true
//    }

    buildFeatures{
        dataBinding = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }

    sourceSets {
        main {
            if (rootProject.ext.isBuildModule) {
                //module 作为 application 独立运行
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                //module 作为 library 合并到宿主App
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    exclude 'src/main/module/*'
                }
            }
        }
    }

}

dependencies {

    kapt 'com.alibaba:arouter-compiler:1.5.1'
    api project(':mvvmArchitecture')
}